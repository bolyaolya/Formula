disabled_rules:
  - discarded_notification_center_observer
  - notification_center_detachment
  - orphaned_doc_comment
  - todo
  - unused_capture_list
  - trailing_whitespace
  - multiline_arguments
  - line_length
  - empty_count
  - enum_case_associated_values_count
  - indentation_width
  - control_statement
  - implicit_getter
  - cyclomatic_complexity
  - private_over_fileprivate
  - strict_fileprivate
  - implicitly_unwrapped_optional
  - force_cast
  - pattern_matching_keywords
  - redundant_optional_initialization
  - large_tuple
  - redundant_type_annotation
  - force_unwrapping
  - for_where
  - array_init
  - empty_parentheses_with_trailing_closure
  - trailing_closure
  - convenience_type
  - closure_end_indentation
  - void_function_in_ternary
  - static_over_final_class
  - multiple_closures_with_trailing_closure
  - first_where
  - unused_optional_binding
  - unneeded_synthesized_initializer
  - identifier_name


opt_in_rules:
  - attributes
  - closure_spacing
  - collection_alignment
  - colon # promote to error
  - discouraged_object_literal
  - empty_collection_literal
  - fatal_error_message
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - operator_usage_whitespace
  - overridden_super_call
  - prefer_self_type_over_type_of_self
  - redundant_nil_coalescing
  - strict_fileprivate
  - toggle_bool
  - unneeded_parentheses_in_closure_argument
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - yoda_condition

  # Find all the available rules by running:
  # swiftlint rules
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self
  - unused_import
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - DerivedData

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_try:
  severity: warning # explicitly
function_body_length:
  warning: 90
# rules that have both warning and error levels, can set just the warning level
# implicitly
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
legacy_hashing: error

attributes:
  always_on_same_line:
    - "@IBSegueAction"
    - "@IBAction"
    - "@NSManaged"
    - "@objc"

# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  excluded: iPhone # excluded via string
type_name:
  allowed_symbols: "_"

vertical_whitespace:
  max_empty_lines: 2

reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)
